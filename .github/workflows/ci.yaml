# # https://forcepush.tech/python-package-ci-cd-with-git-hub-actions
# # https://github.com/ymyzk/tox-gh-actions
# # https://hynek.me/articles/python-github-actions/
# # CRITICAL: We can't hit nexus! This will never work!
# ---
# name: ci
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main,develop,release/*,hotfix/*,]
# jobs:
#   setup-env:
#     name: Setup env
#     runs-on: 'ubuntu-latest'
#     strategy:
#       matrix:
#         python-version: ["3.7", "3.8"]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: "actions/setup-python@v2"
#         with:
#           python-version: "${{ matrix.python-version }}"
#       - name: Cache python
#         id: "cache-python"
#         uses: actions/cache@v2
#         with:
#           path: ${{ env.pythonLocation }}
#           key: ${{ env.pythonLocation }}-tox
#       - name: Install tox
#         run: |
#           python -m pip install --upgrade pip
#           pip install tox tox-gh-actions
#       # Perma-cache Poetry since we only need it for checking pyproject version
#       - name: Cache Poetry
#         id: cache-poetry
#         uses: actions/cache@v2
#         with:
#           path: ~/.poetry
#           key: ${{ runner.os }}-poetry
#       # Only runs when key from caching step changes
#       - name: Install latest version of Poetry
#         if: steps.cache-poetry.outputs.cache-hit != 'true'
#         run: |
#           curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
#       # Poetry still needs to be re-prepended to the PATH on each run, since
#       # PATH does not persist between runs.
#       - name: Add Poetry to $PATH
#         run: |
#           echo "$HOME/.poetry/bin" >> $GITHUB_PATH
#       - name: Get versions
#         run: |
#           poetry --version
#           tox --version
#       - name: Check pyproject.toml validity
#         run: poetry check --no-interaction
#   build:
#     name: "Test ${{ matrix.python-version }}"
#     needs: setup-env
#     runs-on: "ubuntu-latest"
#     strategy:
#       matrix:
#         python-version: ["3.7", "3.8"]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: "actions/setup-python@v2"
#         with:
#           python-version: "${{ matrix.python-version }}"
#       - name: Cache python
#         id: "cache-python"
#         uses: actions/cache@v2
#         with:
#           path: ${{ env.pythonLocation }}
#           key: ${{ env.pythonLocation }}-tox
#       - name: Cache Poetry
#         id: cache-poetry
#         uses: actions/cache@v2
#         with:
#           path: ~/.poetry
#           key: ${{ runner.os }}-poetry
#       - name: Cache dependencies
#         id: cache-deps
#         uses: actions/cache@v2.1.6
#         with:
#           path: ${{github.workspace}}/.tox
#           key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
#       - name: Run tests on "${{ matrix.python-version }}"
#         run: tox
