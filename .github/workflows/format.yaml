# GitHub Action that uses Black to reformat the Python code in an incoming pull request.
# If all Python code in the pull request is compliant with Black then this Action does nothing.
# Othewrwise, Black is run and its changes are committed back to the incoming pull request.
# https://github.com/cclauss/autoblack
#
# Required jobs must always run, but "paths" and "paths-ignore" don't properly cancel out.
# https://www.meziantou.net/executing-github-actions-jobs-or-steps-only-when-specific-files-change.htm

name: format
on:
  pull_request:
jobs:
  check_for_relevant_file_changes:
    runs-on: 'ubuntu-20.04'
    # Declare outputs for next jobs
    outputs:
      changed_json: ${{ steps.check_files_changed.outputs.changed_json }}
      changed_markdown: ${{ steps.check_files_changed.outputs.changed_markdown }}
      changed_python: ${{ steps.check_files_changed.outputs.changed_python }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - shell: pwsh
      id: check_files_changed
      run: |
        # Diff HEAD with the previous commit
        $diff = git diff --name-only HEAD^ HEAD

        # JSON: Check for changes
        $SourceDiffJson = $diff | Where-Object { $_ -match 'brutil/*.json$' }
        $HasDiffJson = $SourceDiffJson.Length -gt 0

        # Markdown: Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
        $SourceDiffMd = $diff | Where-Object { $_ -notmatch '^tests/' -and $_ -match '.md$' }
        $HasDiffMd = $SourceDiffMd.Length -gt 0

        # Python: Check for changes
        $SourceDiffPy = $diff | Where-Object { $_ -match '.py$' }
        $HasDiffPy = $SourceDiffPy.Length -gt 0

        # Set the output named "docs_changed"
        echo "changed_json=$HasDiffJson" >> $GITHUB_ENV
        echo "changed_markdown=$HasDiffMd" >> $GITHUB_ENV
        echo "changed_python=$HasDiffPy" >> $GITHUB_ENV

        # NOTE: 'set-output' is deprecated
        # https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
        # Write-Host "::set-output name=changed_json::$HasDiffJson"
        # Write-Host "::set-output name=changed_markdown::$HasDiffMd"
        # Write-Host "::set-output name=changed_python::$HasDiffPy"
  format-python:
    runs-on: ubuntu-latest
    needs: [ check_for_relevant_file_changes ]
    if: needs.check_for_relevant_file_changes.outputs.changed_python == 'True'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: python cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml') }}
      - name: Install Black and isort
        run: pip install black isort==5.6.4
      - name: Run black
        run: black .
      - name: Run isort
        run: isort .
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Format python via black and isort
          branch: ${{ github.head_ref }}
  format-markdown:
    runs-on: ubuntu-latest
    needs: [ check_for_relevant_file_changes ]
    if: needs.check_for_relevant_file_changes.outputs.changed_markdown == 'True'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - name: Cache node
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - run: npm install prettier
      - run: npx prettier --write "./**/*.md" --no-error-on-unmatched-pattern
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Format markdown via prettier
          branch: ${{ github.head_ref }}
  format-json:
    runs-on: ubuntu-latest
    needs: [ check_for_relevant_file_changes ]
    if: needs.check_for_relevant_file_changes.outputs.changed_json == 'True'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - name: Cache node
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}
      - run: npm install prettier
      - run: npx prettier --write "brutil/**/*.json" --no-error-on-unmatched-pattern
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Format json via prettier
          branch: ${{ github.head_ref }}
